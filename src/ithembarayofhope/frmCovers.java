/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ithembarayofhope;

import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class frmCovers extends javax.swing.JFrame {

    /**
     * Creates new form frmCovers
     */
    public frmCovers() {
        initComponents();
        if(sqlMethods.mCheckIfItemsExistInTable("SELECT ID FROM Covers")) {
            sqlMethods.mLoadName("SELECT ID FROM Covers", cboID);
        }
    }
    
    int intID;
    String strCoverAmount;
    String strCategory;
    String strPremium;
    
    SQLExecutingMethods sqlMethods = new SQLExecutingMethods();
    
    private void mGetValuesFromGUI() {
        strCoverAmount = txtCoverAmount.getText();
        strCategory = txtCategory.getText();
        strPremium = txtPremium.getText();
    }

    private void mSetValuesInGUI() {
        intID = Integer.parseInt(cboID.getSelectedItem().toString());
        
        String[] arrCoverDetails = sqlMethods.mFetchUserDetails(
        "SELECT CoverAmount, Category, Premium FROM Covers WHERE ID="+intID);
        
        txtCoverAmount.setText(arrCoverDetails[0]);
        txtCategory.setText(arrCoverDetails[1]);
        txtPremium.setText(arrCoverDetails[2]);
    }
    
    private boolean mCheckInput() {
        if(txtCoverAmount.getText().equals("")) {
            return false;
        }
        else if(txtCategory.getText().equals("")) {
            return false;
        } 
        else if(txtPremium.getText().equals("")) {
            return false;
        }
        return true;
    }
    
    private void mCreateCover() {
        if(mCheckInput()) {
            
            mGetValuesFromGUI();
            
            if(sqlMethods.mCheckIfItemsExistInTable("SELECT ID FROM Covers WHERE CoverAmount ='"+
                    strCoverAmount+"' AND Category ='"+strCategory+"' AND Premium ='"+strPremium+"'")) {
                
                JOptionPane.showMessageDialog(this, "Cover details exist");
            }
            else if(sqlMethods.mCreateUser("INSERT INTO Covers(CoverAmount, Category, Premium)"
                    + "VALUES('"+strCoverAmount+"','"+strCategory+"','"+strPremium+"')").equals("Created")) {
                
                JOptionPane.showMessageDialog(this, "Policy cover created");
            }
        } 
        else if(txtCoverAmount.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Cover amount field required");
        }
        else if(txtCategory.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Category field required");
        }
        else if(txtPremium.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Premium field required");
        }
    }
    
    private void mSaveUpdate() {
        if(mCheckInput()) {
            mGetValuesFromGUI();
            if(sqlMethods.mCheckIfItemsExistInTable("SELECT CoverAmount, Category, Premium FROM Covers WHERE CoverAmount ='"+
                    strCoverAmount+"' AND Category ='"+strCategory+"' AND Premium ='"+strPremium+"'")
                    && !sqlMethods.mTableField("SELECT ID FROM Covers WHERE CoverAmount ='"+
                    strCoverAmount+"' AND Category ='"+strCategory+"' AND Premium ='"+strPremium+"'").equals(String.valueOf(intID))) {
                
                JOptionPane.showMessageDialog(this, "Cover details exist");
            }
            else if(sqlMethods.mUpdateUser("UPDATE Covers SET CoverAmount='"+
                    strCoverAmount+"', Category='"+strCategory+"', Premium ='"+strPremium+"' WHERE ID="+intID).equals("Updated")) {
                JOptionPane.showMessageDialog(this, "Cover update successful");
            }
        }
        else if(txtCoverAmount.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Cover amount field required");
        }
        else if(txtCategory.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Category field required");
        }
        else if(txtPremium.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Premium field required");
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        lblCategory = new javax.swing.JLabel();
        lblPremium = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnViewCovers = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        cboID = new javax.swing.JComboBox();
        lblCoverAmount = new javax.swing.JLabel();
        txtCoverAmount = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        txtPremium = new javax.swing.JTextField();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCategory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCategory.setText("Category:");

        lblPremium.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPremium.setText("Premium:");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnViewCovers.setText("View");
        btnViewCovers.setActionCommand("View");
        btnViewCovers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCoversActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lblCoverAmount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCoverAmount.setText("Cover Amount:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCreate)
                                .addGap(35, 35, 35)
                                .addComponent(btnEdit))
                            .addComponent(lblPremium, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCoverAmount)
                            .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btnViewCovers)
                                .addGap(35, 35, 35)
                                .addComponent(btnClear))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCoverAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPremium, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(cboID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCoverAmount)
                    .addComponent(txtCoverAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPremium)
                    .addComponent(txtPremium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnViewCovers)
                    .addComponent(btnClear)
                    .addComponent(btnCreate))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewCoversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCoversActionPerformed
        frmViewDatabaseTable frmViewCovers = new frmViewDatabaseTable("SELECT ID, CoverAmount, Category, Premium FROM Covers");
        frmViewCovers.setLocationRelativeTo(null);
        frmViewCovers.setAlwaysOnTop(true);
        frmViewCovers.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        frmViewCovers.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnViewCoversActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(btnEdit.getText().equals("Edit")) {
            mSetValuesInGUI();
            btnEdit.setText("Save");
        } 
        else{
            mSaveUpdate();
            btnEdit.setText("Edit");
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        mCreateCover();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtCoverAmount.setText("");
        txtCategory.setText("");
        txtPremium.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCovers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCovers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCovers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCovers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCovers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnViewCovers;
    private javax.swing.JComboBox cboID;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblCoverAmount;
    private javax.swing.JLabel lblPremium;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtCoverAmount;
    private javax.swing.JTextField txtPremium;
    // End of variables declaration//GEN-END:variables
}
